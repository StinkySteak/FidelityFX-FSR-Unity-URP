diff --git a/Editor/Camera/UniversalRenderPipelineCameraUI.Rendering.Drawers.cs b/Editor/Camera/UniversalRenderPipelineCameraUI.Rendering.Drawers.cs
index e8c6ae3..c6167e1 100644
--- a/Editor/Camera/UniversalRenderPipelineCameraUI.Rendering.Drawers.cs
+++ b/Editor/Camera/UniversalRenderPipelineCameraUI.Rendering.Drawers.cs
@@ -214,7 +214,9 @@ namespace UnityEditor.Rendering.Universal
 
             static void DrawerRenderingRenderPostProcessing(UniversalRenderPipelineSerializedCamera p, Editor owner)
             {
-                EditorGUILayout.PropertyField(p.renderPostProcessing, Styles.renderPostProcessing);
+                EditorGUILayout.PropertyField(p.renderPostProcessing, Styles.renderPostProcessing);
+                if (p.renderPostProcessing.boolValue)
+                    EditorGUILayout.PropertyField(p.AMDFSR, Styles.AMDFSRtext);
             }
 
             static void DrawerRenderingPriority(UniversalRenderPipelineSerializedCamera p, Editor owner)
diff --git a/Editor/Camera/UniversalRenderPipelineCameraUI.Rendering.Skin.cs b/Editor/Camera/UniversalRenderPipelineCameraUI.Rendering.Skin.cs
index ac65036..82948f6 100644
--- a/Editor/Camera/UniversalRenderPipelineCameraUI.Rendering.Skin.cs
+++ b/Editor/Camera/UniversalRenderPipelineCameraUI.Rendering.Skin.cs
@@ -12,6 +12,7 @@ namespace UnityEditor.Rendering.Universal
                 public static GUIContent rendererType = EditorGUIUtility.TrTextContent("Renderer", "The series of operations that translates code into visuals. These have different capabilities and performance characteristics.");
 
                 public static GUIContent renderPostProcessing = EditorGUIUtility.TrTextContent("Post Processing", "Enable this to make this camera render post-processing effects.");
+                public static GUIContent AMDFSRtext = EditorGUIUtility.TrTextContent("AMD FSR 1.0", "AMD FidelityFX Super Resolution 1.0 is a cutting edge super-optimized spatial upscaling technology that produces impressive image quality at fast framerates.");
                 public static GUIContent antialiasing = EditorGUIUtility.TrTextContent("Anti-aliasing", "The method the camera uses to smooth jagged edges.");
                 public static GUIContent antialiasingQuality = EditorGUIUtility.TrTextContent("Quality", "The quality level to use for the selected anti-aliasing method.");
 
diff --git a/Editor/Camera/UniversalRenderPipelineSerializedCamera.cs b/Editor/Camera/UniversalRenderPipelineSerializedCamera.cs
index fc41bce..1e7e944 100644
--- a/Editor/Camera/UniversalRenderPipelineSerializedCamera.cs
+++ b/Editor/Camera/UniversalRenderPipelineSerializedCamera.cs
@@ -22,6 +22,7 @@ namespace UnityEditor.Rendering.Universal
         public SerializedProperty antialiasing { get; }
 
         // URP specific properties
+		public SerializedProperty AMDFSR { get; }
         public SerializedProperty renderShadows { get; }
         public SerializedProperty renderDepth { get; }
         public SerializedProperty renderOpaque { get; }
@@ -83,6 +84,7 @@ namespace UnityEditor.Rendering.Universal
             clearDepth = serializedAdditionalDataObject.FindProperty("m_ClearDepth");
 
             // URP specific properties
+			AMDFSR = serializedAdditionalDataObject.FindProperty("m_AMDFSR");
             renderShadows = serializedAdditionalDataObject.FindProperty("m_RenderShadows");
             renderDepth = serializedAdditionalDataObject.FindProperty("m_RequiresDepthTextureOption");
             renderOpaque = serializedAdditionalDataObject.FindProperty("m_RequiresOpaqueTextureOption");
diff --git a/Runtime/Data/PostProcessData.asset b/Runtime/Data/PostProcessData.asset
index ef442ec..1137794 100644
--- a/Runtime/Data/PostProcessData.asset
+++ b/Runtime/Data/PostProcessData.asset
@@ -14,17 +14,25 @@ MonoBehaviour:
   m_EditorClassIdentifier: 
   shaders:
     stopNanPS: {fileID: 4800000, guid: 1121bb4e615ca3c48b214e79e841e823, type: 3}
-    subpixelMorphologicalAntialiasingPS: {fileID: 4800000, guid: 63eaba0ebfb82cc43bde059b4a8c65f6, type: 3}
-    gaussianDepthOfFieldPS: {fileID: 4800000, guid: 5e7134d6e63e0bc47a1dd2669cedb379, type: 3}
-    bokehDepthOfFieldPS: {fileID: 4800000, guid: 2aed67ad60045d54ba3a00c91e2d2631, type: 3}
-    cameraMotionBlurPS: {fileID: 4800000, guid: 1edcd131364091c46a17cbff0b1de97a, type: 3}
-    paniniProjectionPS: {fileID: 4800000, guid: a15b78cf8ca26ca4fb2090293153c62c, type: 3}
+    subpixelMorphologicalAntialiasingPS: {fileID: 4800000, guid: 63eaba0ebfb82cc43bde059b4a8c65f6,
+      type: 3}
+    gaussianDepthOfFieldPS: {fileID: 4800000, guid: 5e7134d6e63e0bc47a1dd2669cedb379,
+      type: 3}
+    bokehDepthOfFieldPS: {fileID: 4800000, guid: 2aed67ad60045d54ba3a00c91e2d2631,
+      type: 3}
+    cameraMotionBlurPS: {fileID: 4800000, guid: 1edcd131364091c46a17cbff0b1de97a,
+      type: 3}
+    paniniProjectionPS: {fileID: 4800000, guid: a15b78cf8ca26ca4fb2090293153c62c,
+      type: 3}
     lutBuilderLdrPS: {fileID: 4800000, guid: 65df88701913c224d95fc554db28381a, type: 3}
     lutBuilderHdrPS: {fileID: 4800000, guid: ec9fec698a3456d4fb18cf8bacb7a2bc, type: 3}
     bloomPS: {fileID: 4800000, guid: 5f1864addb451f54bae8c86d230f736e, type: 3}
-    LensFlareDataDrivenPS: {fileID: 4800000, guid: 6cda457ac28612740adb23da5d39ea92, type: 3}
+    LensFlareDataDrivenPS: {fileID: 4800000, guid: 6cda457ac28612740adb23da5d39ea92,
+      type: 3}
     uberPostPS: {fileID: 4800000, guid: e7857e9d0c934dc4f83f270f8447b006, type: 3}
     finalPostPassPS: {fileID: 4800000, guid: c49e63ed1bbcb334780a3bd19dfed403, type: 3}
+    easuCS: {fileID: 7200000, guid: cc73f0667c7230142a21eb411ee4cc7d, type: 3}
+    rcasCS: {fileID: 7200000, guid: 458f202028db1d64faa71c7675198a2a, type: 3}
   textures:
     blueNoise16LTex:
     - {fileID: 2800000, guid: 81200413a40918d4d8702e94db29911c, type: 3}
diff --git a/Runtime/Data/PostProcessData.cs b/Runtime/Data/PostProcessData.cs
index 3b9bd5f..10eec31 100644
--- a/Runtime/Data/PostProcessData.cs
+++ b/Runtime/Data/PostProcessData.cs
@@ -74,6 +74,12 @@ namespace UnityEngine.Rendering.Universal
 
             [Reload("Shaders/PostProcessing/FinalPost.shader")]
             public Shader finalPostPassPS;
+
+            [Reload("Shaders/PostProcessing/easu.compute")]
+            public ComputeShader easuCS;
+
+            [Reload("Shaders/PostProcessing/rcas.compute")]
+            public ComputeShader rcasCS;
         }
 
         [Serializable, ReloadGroup]
